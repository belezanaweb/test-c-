// <auto-generated />
using System;
using GrupoBoticario.DataAccess.Repositories.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrupoBoticario.DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210626192513_bw_v1")]
    partial class bw_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.InventoryEntity", b =>
                {
                    b.Property<long>("Sku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("IdkeyReference")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Sku");

                    b.HasIndex("IdkeyReference")
                        .IsUnique();

                    b.ToTable("bw_inventory");
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.ProductEntity", b =>
                {
                    b.Property<long>("Sku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("IdkeyReference")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(90)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Sku");

                    b.ToTable("bw_product");
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.WareHouseEntity", b =>
                {
                    b.Property<long>("Sku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("IdkeyReference")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Locality")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeWareHouseId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Sku");

                    b.HasIndex("IdkeyReference");

                    b.ToTable("bw_warehouse");
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.InventoryEntity", b =>
                {
                    b.HasOne("GrupoBoticario.Domain.Entity.Product.ProductEntity", null)
                        .WithOne("Inventory")
                        .HasForeignKey("GrupoBoticario.Domain.Entity.Product.InventoryEntity", "IdkeyReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.WareHouseEntity", b =>
                {
                    b.HasOne("GrupoBoticario.Domain.Entity.Product.InventoryEntity", null)
                        .WithMany("WareHouses")
                        .HasForeignKey("IdkeyReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.InventoryEntity", b =>
                {
                    b.Navigation("WareHouses");
                });

            modelBuilder.Entity("GrupoBoticario.Domain.Entity.Product.ProductEntity", b =>
                {
                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
